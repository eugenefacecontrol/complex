# Specify a scope of objects we can create:
# v1: componentStatus, configMap, Endpoints, Event, Namespace, Pod etc.
# apps/v1: ControllerRevision, StatefulSet
apiVersion: v1
# There are several types of created objects: StatefulSet, ReplicaController, Pod - running one container or more, Service - setting up networking, Deployment - maintains a set of identical pods, ensuring that they have the correct config and that the right number exists.
kind: Service
metadata:
  name: redis-cluster-ip-service
spec:
  # Service has 4 sub-types: ClusterIP (Exposes a set of pods to other objects in the cluster), NodePort (Exposes a container to the outside world), LoadBalancer and Ingress
  type: ClusterIP
  selector:
    # That's how redis-pod is linked to the redis-node-port. The key/value can be anything: key: value
    component: redis
  ports:
    # Other pod, that needs access to the current one can access via this port
    - port: 6379
    # We want to send any incoming trafic into port 6379 inside this pod. And the port 6379 is mapped to the multi-redis container in the redis-pod.yaml.
      targetPort: 6379