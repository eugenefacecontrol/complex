# version of the docker-compose
version: '3'
# Service is like saying a type of container, and we say: Here is what we want you to do:
services: 
# The name of the service:
  postgres:
    image: 'postgres:latest'
    environment:
      POSTGRES_PASSWORD: postgres_password
  redis:
    image: 'redis:latest'
  nginx:
    # depends_on:
    #   - api
    #   - client
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
  # - means array of elements. <local port>:<container port>
    - 3050:80
  api:
   # Look in the 'server' directory for the specified docker file and use it
    build:
      dockerfile: Dockerfile.dev
      context: ./server
    volumes:
      # Don't try to override this folder
      - /home/node/app/node_modules
      # Look inside the server directory and copy everything inside the /home/node/app of the container
      - ./server:/home/node/app
      # Somehow, the array usage is not working
    environment: 
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PGUSER: postgres
      PGHOST: postgres
      PGDATABASE: postgres
      PGPASSWORD: postgres_password
      PGPORT: 5432
  client:
    stdin_open: true
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      # Don't try to override this folder
      - /home/node/app/node_modules
      # Look inside the server directory and copy everything inside the /home/node/app of the container
      - ./client:/home/node/app
      # Somehow, the array usage is not working
  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      # Don't try to override this folder
      - /home/node/app/node_modules
      # Look inside the server directory and copy everything inside the /home/node/app of the container
      - ./worker:/home/node/app
      # Somehow, the array usage is not working
    environment: 
      REDIS_HOST: redis
      REDIS_PORT: 6379